Inheritance:
Bir üst class (superclass) bir de bu class'dan doğmuş bir alt class var(subclass). Subclass superclass'ın metotlarına fln erişebiliyor. Subclass için bir nesne oluşturmak superclass'a erişmek için yeterli. Bu noktada superclass'taki metotlar için prive ön şeysi kullanılabilir. Superclass a erişmek için (extends) kullanılır.

Polymorphism:
Bir superclasstan birden çok subclass ürettiğinde de polymorphism oluyo sanırım. tam olarak aynı şeyler

Inner Class:
Bir class'ın içinde başka bir class açmak. inherit gibi değil. Nesne oluşturma kısmı biraz daha farklı ona bakarsın

Abstract Class:
class oluştururken önüne abstract yazılarak oluşturuluyo. Bu class'a doğrudan erişemiyosun. Bi subclass açıp bu class'a inherit ediceksin. Ondan sonra subclass için nesne oluşturduğunda bu superclass'a(yani abstract class'a) erişebiliyosun. aynı şekilde abstract metotlar da oluşturabiliyon.
eğer abstract classın içinde abstract bir metotun varsa onu inherit edilen classlarda override etmen gerekir. Eğer etmezsen hata alırsın. Abstract metot inherit edilen classlarda tanımlanmalı.

Interface:
Class gibi ama daha havalısı. Interface tanımlanıyo, altında da metotları tanımlanıyo. Sonra bu interface'i implement eden classlar tanımlıyorsun. Interface'de tanımladığın metotlara burada gövde ekliyorsun. Ulaşmak istersen de interface için gövdesini oluşturduğun class için nesne oluşturup çağırabiliyosun. Örnek verelim:

// Interface
interface Animal {
  public void animalSound(); // interface method (does not have a body)
  public void sleep(); // interface method (does not have a body)
}

// Pig "implements" the Animal interface
class Pig implements Animal {
  public void animalSound() {
    // The body of animalSound() is provided here
    System.out.println("The pig says: wee wee");
  }
  public void sleep() {
    // The body of sleep() is provided here
    System.out.println("Zzz");
  }
}

class Main {
  public static void main(String[] args) {
    Pig myPig = new Pig();  // Create a Pig object
    myPig.animalSound();
    myPig.sleep();
  }
}
